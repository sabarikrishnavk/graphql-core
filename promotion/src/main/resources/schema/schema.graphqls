type Query {
    discountSkuLocation(skuid: String!, location: String! ): [Discounts]
    discountBySku(skuid: String!  ): [Discounts]
}
type Mutation {
    evaluatePromotion(cart: Cart!): ReturnCart
}
type Price @key(fields: "priceid" )  @extends {
    priceid: String! @external
    discounts: [Discounts]
}
input Cart{
    cartid : String!
    paymenttype:String
    totalprice :Int
    discount :Int
}

type ReturnCart{
    cartid : String!
    paymenttype:String
    totalprice :Int
    discount :Int
}
type Discounts {
    priceid: String!
    skuid: String!
    location: String!
    price: Int
    discountdtl: [DiscountDetail]
}
type DiscountDetail{
    type: DiscountType
    percentage : Int
    fixed: Int
    amountoff: Int
}

enum DiscountType {
    PERCENTAGE_OFF
    AMOUNT_OFF
    FIXED_AMOUNT
}
